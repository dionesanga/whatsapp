{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/cadastro/request.component.html","webpack:///./src/app/cadastro/request.component.ts","webpack:///./src/app/consulta/consulta.component.html","webpack:///./src/app/consulta/consulta.component.ts","webpack:///./src/app/consulta/list.component.html","webpack:///./src/app/consulta/list.component.ts","webpack:///./src/app/teste/teste.component.html","webpack:///./src/app/teste/teste.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/service/app.service.ts","webpack:///./src/vo/RequestVO.ts","webpack:///./src/vo/mailVO.ts","webpack:///./src/vo/usuarioRotVO.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { TextMaskModule } from 'angular2-text-mask';\n//import { MyDatePickerModule } from 'angular4-datepicker/src/my-date-picker/my-date-picker.module';\nimport { MyDatePickerModule } from 'mydatepicker';\n\n//table\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { Ng2OrderModule } from 'ng2-order-pipe';\nimport { ToastrModule } from 'ngx-toastr';\nimport {NgbPaginationModule, NgbAlertModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { ListComponent } from './consulta/list.component';\nimport { RequestComponent } from './cadastro/request.component';\nimport { TesteComponent } from './teste/teste.component';\nimport { routing } from 'src/app/app.routing';\nimport { AppService } from 'src/service/app.service';\nimport { ConsultaComponent } from 'src/app/consulta/consulta.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ConsultaComponent,\n    ListComponent,\n    RequestComponent,\n    TesteComponent \n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    FormsModule,\n    HttpClientModule,\n    Ng2SearchPipeModule, //table\n    NgxPaginationModule, // table\n    Ng2OrderModule, //table\n    BrowserAnimationsModule,\n    TextMaskModule,\n    MyDatePickerModule,\n    ToastrModule.forRoot({\n      timeOut : 3000,\n      preventDuplicates : true\n    }),\n    ReactiveFormsModule,\n    NgbPaginationModule, NgbAlertModule\n  ],\n  providers: [ AppService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes } from '@angular/router';\r\nimport { ModuleWithProviders } from '@angular/compiler/src/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { RequestComponent } from './cadastro/request.component';\r\nimport { ConsultaComponent } from './consulta/consulta.component';\r\nimport { TesteComponent } from './teste/teste.component';\r\n\r\nconst APP_ROUTES:   Routes = [\r\n    { path: '', component: AppComponent },\r\n    { path: 'list',     component: ConsultaComponent },\r\n    { path: 'cadastro', component: RequestComponent },\r\n    { path: 'teste', component: TesteComponent }\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(APP_ROUTES);\r\n\r\n","module.exports = \"<form (keydown.enter)=\\\"$event.target.tagName == 'save'\\\" name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n    <div class=\\\"main-content\\\">\\r\\n\\r\\n        <ngb-alert *ngIf=\\\"titleMessage\\\" type=\\\"success\\\" (close)=\\\"titleMessage = null\\\" style=\\\"width: 800px;\\\"><strong>{{titleMessage}}</strong> {{ successMessage }}</ngb-alert>\\r\\n        <ngb-alert *ngIf=\\\"titleMessageWarning\\\" type=\\\"warning\\\" (close)=\\\"titleMessageWarning = null\\\" style=\\\"width: 800px;\\\"><strong>{{titleMessageWarning}}</strong> {{ warningMessage }}</ngb-alert>\\r\\n\\r\\n        <div class=\\\"div-block\\\">\\r\\n            <label for=\\\"request\\\" style=\\\"float: left; padding-top:5px; padding-right:10px; width:80px;\\\">Chamado</label>\\r\\n            <input name=\\\"request\\\" (keyup.enter)=\\\"detailsRequest()\\\" class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"requestText\\\" #request=\\\"ngModel\\\"\\r\\n                [ngClass]=\\\"{ 'is-invalid': f.submitted && request.invalid }\\\" required style=\\\"width:120px; float: left;\\\">\\r\\n\\r\\n\\r\\n            <button (click)=\\\"detailsRequest()\\\" class=\\\"btn btn-link\\\" style=\\\"margin-left: 5px;\\\" type=\\\"button\\\">\\r\\n                <img src=\\\"assets/img/magnifier-tool.png\\\" />\\r\\n            </button>\\r\\n\\r\\n            <div *ngIf=\\\"f.submitted && request.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"request.errors.required\\\">Informe um número de chamado!</div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"div-block\\\">\\r\\n            <label for=\\\"fa\\\" style=\\\"float: left; padding-top:5px; padding-right:10px; width:80px;\\\">FA</label>\\r\\n            <input id=\\\"fa\\\" class=\\\"form-control\\\" readonly=\\\"true\\\" type=\\\"text\\\" name=\\\"fa\\\" [(ngModel)]=\\\"r.fa\\\" style=\\\"width:150px\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"div-block\\\">\\r\\n            <label for=\\\"canal\\\" style=\\\"float: left; padding-top:5px; padding-right:10px; width:80px;\\\">Canal</label>\\r\\n            <input id=\\\"canal\\\" class=\\\"form-control\\\" readonly=\\\"true\\\" type=\\\"text\\\" name=\\\"canal\\\" [(ngModel)]=\\\"r.canal\\\" style=\\\"width:150px\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"div-block\\\">\\r\\n            <label for=\\\"procon\\\" style=\\\"float: left; padding-top:5px; padding-right:10px; width:80px;\\\">Procon</label>\\r\\n            <input id=\\\"procon\\\" class=\\\"form-control\\\" readonly=\\\"true\\\" type=\\\"text\\\" name=\\\"procon\\\" [(ngModel)]=\\\"r.procon\\\" style=\\\"width:250px\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"div-block\\\">\\r\\n            <label for=\\\"curranal\\\" style=\\\"float: left; padding-top:5px; padding-right:10px; width:80px;\\\">Responsável</label>\\r\\n            <input id=\\\"curranal\\\" class=\\\"form-control\\\" readonly=\\\"true\\\" type=\\\"text\\\" name=\\\"curranal\\\" [(ngModel)]=\\\"r.curranal\\\" style=\\\"width:150px\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"div-block\\\">\\r\\n            <label for=\\\"opendate\\\" style=\\\"float: left; padding-top:5px; padding-right:10px; width:80px;\\\">Abertura</label>\\r\\n            <input id=\\\"opendate\\\" class=\\\"form-control\\\" readonly=\\\"true\\\" type=\\\"text\\\" name=\\\"opendate\\\" [(ngModel)]=\\\"r.opendate\\\" style=\\\"width:150px\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"div-block\\\">\\r\\n            <label for=\\\"resltime\\\" style=\\\"float: left; padding-top:5px; padding-right:10px; width:80px;\\\">Vencimento</label>\\r\\n            <input id=\\\"resltime\\\" class=\\\"form-control\\\" readonly=\\\"true\\\" type=\\\"text\\\" name=\\\"resltime\\\" [(ngModel)]=\\\"r.resltime\\\" style=\\\"width:150px\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"div-block\\\">\\r\\n            <label for=\\\"closedate\\\" style=\\\"float: left; padding-top:5px; padding-right:10px; width:80px;\\\">Fechamento</label>\\r\\n            <input id=\\\"closedate\\\" class=\\\"form-control\\\" readonly=\\\"true\\\" type=\\\"text\\\" name=\\\"closedate\\\" [(ngModel)]=\\\"r.closedate\\\" style=\\\"width:150px\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"div-block\\\">\\r\\n            <label for=\\\"rstatus\\\" style=\\\"float: left; padding-top:5px; padding-right:10px; width:80px;\\\">Status Aut.</label>\\r\\n            <input id=\\\"rstatus\\\" class=\\\"form-control\\\" readonly=\\\"true\\\" type=\\\"text\\\" name=\\\"rstatus\\\" [(ngModel)]=\\\"r.rstatus\\\" style=\\\"width:150px\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"div-block\\\">\\r\\n            <label for=\\\"descript\\\" style=\\\"float: left; padding-top:5px; padding-right:10px; width:80px;\\\">Descrição</label>\\r\\n            <textarea id=\\\"descript\\\" readonly=\\\"true\\\" class=\\\"form-control\\\" name=\\\"search\\\" [(ngModel)]=\\\"r.descript\\\" style=\\\"width:450px; height: 150px;\\\"></textarea>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"div-block-bottom\\\">\\r\\n            <button class=\\\"btn btn-success\\\" style=\\\"margin-right: 30px;\\\">Gravar</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n<ng-template #loading>\\r\\n    Loading User...\\r\\n</ng-template>\\r\\n\\r\\n<!--\\r\\n<div class=\\\"form-group\\\">\\r\\n    <label for=\\\"email\\\">Email</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"model.email\\\" #email=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && email.invalid }\\\"\\r\\n        required email />\\r\\n    <div *ngIf=\\\"f.submitted && email.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n        <div *ngIf=\\\"email.errors.required\\\">Email is required</div>\\r\\n        <div *ngIf=\\\"email.errors.email\\\">Email must be a valid email address</div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"form-group\\\">\\r\\n    <label for=\\\"password\\\">Password</label>\\r\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && password.invalid }\\\"\\r\\n        required minlength=\\\"6\\\" />\\r\\n    <div *ngIf=\\\"f.submitted && password.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n        <div *ngIf=\\\"password.errors.required\\\">Password is required</div>\\r\\n        <div *ngIf=\\\"password.errors.minlength\\\">Password must be at least 6 characters</div>\\r\\n    </div>\\r\\n</div>\\r\\n-->\"","import { Component } from '@angular/core';\r\nimport { OnInit } from '@angular/core/src/metadata/lifecycle_hooks';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {Subject} from 'rxjs';\r\n\r\nimport { RequestVO } from 'src/vo/RequestVO';\r\nimport { AppService } from 'src/service/app.service';\r\nimport { ValidatorFn, Validator, AbstractControl, FormControl, NG_VALIDATORS } from '@angular/forms';\r\nimport { async } from 'rxjs/internal/scheduler/async';\r\n\r\n@Component({\r\n  templateUrl: './request.component.html',\r\n})\r\nexport class RequestComponent implements OnInit {  \r\n  model                 : any = {};\r\n  _success              = new Subject<string>();\r\n  successMessage        : string;\r\n  warningMessage        : string;\r\n  titleMessage          : string;\r\n  titleMessageWarning   : string;\r\n\r\n  task                  : RequestVO\r\n  requestText           : string\r\n  r                     : RequestVO = null\r\n\r\n  constructor(private service: AppService, private message: ToastrService) {\r\n    \r\n  }\r\n\r\n  detailsRequest() {\r\n    this.r                    = new RequestVO()\r\n    this.clearMsg()\r\n    \r\n    this.service.getCipRequest(this.requestText).subscribe( data => { \r\n      if (data != null) { this.r = data } else { this.r = new RequestVO }\r\n\r\n      if (this.r.curranal === undefined) {\r\n        this.message.warning('Chamado não encontrado!', 'Verifique se o chamado existe ou é de CIP!')\r\n      }\r\n    })\r\n  }\r\n\r\n  save() {    \r\n    //this.generateMessage('success', 'Confirmação', 'Registro gravado com sucesso!');\r\n    this.clearMsg()\r\n\r\n    this.service.existsReg(this.requestText).subscribe(data =>{\r\n      if(data){  // ja possui request cadastrado\r\n\r\n        this.titleMessageWarning  = 'Verifique!';\r\n        this.warningMessage       = 'Chamado já cadastrado.'\r\n\r\n      } else{   // cadastrar request\r\n\r\n\r\n        this.service.isCip(this.requestText).subscribe(data =>{\r\n          if(!data){\r\n            this.titleMessageWarning  = 'Verifique!';\r\n            this.warningMessage       = 'Chamado não é de CIP.'\r\n          }\r\n          else{\r\n            this.r.equipeResponsavel  = 'Equipe Whats';\r\n            let objJson : string  = JSON.stringify(this.r)\r\n    \r\n            this.service.saveReg(objJson).subscribe( data => {\r\n            this.titleMessage     = 'Gravado com sucesso!';\r\n            this.r                = new RequestVO()\r\n            });\r\n          }\r\n        })\r\n      }\r\n    })\r\n\r\n    /*\r\n    this.service.existsReg(this.request).subscribe(data => {\r\n      alert(data)\r\n      if(data){\r\n        this.generateMessage('warning', 'Verifique', 'Chamado já possui acompanhamento!');\r\n      }else{\r\n        this.generateMessage('success', 'Concluído', 'Registro gravado com sucesso!')\r\n      }\r\n    })\r\n    */\r\n  }\r\n\r\n  clearMsg(){\r\n    this.titleMessage       = null;\r\n    this.titleMessageWarning  = null;\r\n    this.warningMessage     = null;\r\n    this.successMessage     = null;\r\n  }\r\n\r\n  generateMessage(tipo: string, title: string, detail: string) {\r\n    this.clearMsg()\r\n    switch (tipo) {\r\n      case 'success': {\r\n        this.message.success(title, detail);\r\n        break;\r\n      }\r\n      case 'error': {\r\n        this.message.error(title, detail);\r\n        break;\r\n      }\r\n      case 'warning': {\r\n        this.message.warning(title, detail);\r\n        break;\r\n      }\r\n      default: {\r\n        this.message.success(title, detail);\r\n      }\r\n    }\r\n\r\n  }\r\n/*\r\n  getExist() {\r\n    let validacao : boolean  = false;\r\n    this.service.search(this.request).then((data : Response) => console.log(data.json()));\r\n  }\r\n*/\r\n\r\nngOnInit() {\r\n    this.r = new RequestVO();\r\n\r\n\r\n  }\r\n}","module.exports = \"<listReqWhats></listReqWhats>\"","import { Component } from '@angular/core';\r\nimport { ListComponent } from './list.component'\r\n\r\n@Component({  \r\n  templateUrl: './consulta.component.html',\r\n})\r\n\r\nexport class ConsultaComponent {\r\n\r\n\r\n}","module.exports = \"<div class=\\\"main-content\\\">\\r\\n    <script type=\\\"text/javascript\\\">\\r\\n        $(document).ready(function () {\\r\\n            $('#dtg').DataTable();\\r\\n            $('.dataTables_length').addClass('bs-select');\\r\\n        });\\r\\n    </script>\\r\\n    \\r\\n    <div style=\\\"width:800px;\\\">\\r\\n        <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"search\\\" [(ngModel)]=\\\"filter\\\" style=\\\"width:200px; float:right;\\\">\\r\\n        <span style=\\\"float:right; padding-top:5px;  padding-right:5px; font-weight:bold; padding-bottom:10px;\\\">Pesquisa:</span>\\r\\n    </div>\\r\\n    <table id='dtg' class=\\\"table table-hover table-striped table-bordered table-sm\\\" style=\\\"width:800px\\\">\\r\\n        <thead class=\\\"thead-dark\\\">\\r\\n            <th class=\\\"th-sm\\\" (click)=\\\"sort('request')\\\" style=\\\"width: 150px;\\\">Request\\r\\n                <i class=\\\"fa fa-sort float-right\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </th>\\r\\n            <th class=\\\"th-sm\\\" (click)=\\\"sort('curranal')\\\" style=\\\"width: 150px;\\\">Analista\\r\\n                <i class=\\\"fa fa-sort float-right\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </th>\\r\\n            <th class=\\\"th-sm\\\" (click)=\\\"sort('rstatus')\\\" style=\\\"width: 150px;\\\">Status\\r\\n                <i class=\\\"fa fa-sort float-right\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </th>\\r\\n            <th class=\\\"th-sm\\\" (click)=\\\"sort('opendate')\\\" style=\\\"width: 150px;\\\">Abertura\\r\\n                <i class=\\\"fa fa-sort float-right\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </th>\\r\\n            <th class=\\\"th-sm\\\" (click)=\\\"sort('resltime')\\\" style=\\\"width: 150px;\\\">Vencimento\\r\\n                <i class=\\\"fa fa-sort float-right\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </th>\\r\\n            <th></th>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let x of list | orderBy: key : reverse | filter:filter | paginate: { itemsPerPage: 10, currentPage: p }; let i = index\\\">\\r\\n                <td>{{ x.request }}</td>\\r\\n                <td>{{ x.curranal }}</td>\\r\\n                <td>{{ x.rstatus }}</td>\\r\\n                <td>{{ x.opendate }}</td>\\r\\n                <td>{{ x.resltime }}</td>\\r\\n                <td style=\\\"text-align: center;\\\">\\r\\n                    <button (click)=\\\"detailsRequest(x)\\\" data-toggle=\\\"modal\\\" data-target=\\\".bd-example-modal-lg\\\" class=\\\"btn btn-link\\\"> \\r\\n                            <img src=\\\"assets/img/magnifier-tool.png\\\"/>\\r\\n                    </button>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n        <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\r\\n    </table>\\r\\n\\r\\n    <!-- Modal Visualizar-->\\r\\n    <div class=\\\"modal fade bd-example-modal-lg\\\" id=\\\"mdlVisualizar\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modalLabel\\\" aria-hidden=\\\"true\\\" style=\\\"padding-top:100px; width:1500px !important; \\\">\\r\\n        <div class=\\\"modal-dialog modal-lg\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"modal-header\\\">\\r\\n                    <h5 class=\\\"modal-title\\\" id=\\\"modalLabel\\\">Informações</h5>\\r\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <div class=\\\"modal-line\\\">                        \\r\\n                        <div class=\\\"div-line1\\\">\\r\\n                            <label for=\\\"id\\\">Automídia</label>\\r\\n                            <input value=\\\"{{r.request}}\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"id\\\" style=\\\"width:150px !important;\\\" readonly=\\\"readonly\\\"/>\\r\\n                        </div>\\r\\n    \\r\\n                        <div class=\\\"div-line2\\\">\\r\\n                            <label for=\\\"curranal\\\">Responsável</label>\\r\\n                            <input id=\\\"curranal\\\" value=\\\"{{r.curranal}}\\\" type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"width:150px !important;\\\" readonly=\\\"readonly\\\"/>\\r\\n                        </div>\\r\\n    \\r\\n                        <div class=\\\"div-line2\\\">\\r\\n                            <label for=\\\"fa\\\">FA</label>\\r\\n                            <input id=\\\"fa\\\" value=\\\"{{r.fa}}\\\" type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"width:150px !important;\\\" readonly=\\\"readonly\\\"/>                            \\r\\n                        </div>\\r\\n    \\r\\n                        <div class=\\\"div-line2\\\">\\r\\n                            <label for=\\\"procon\\\">Procon</label>\\r\\n                            <input id=\\\"procon\\\" value=\\\"{{r.procon}}\\\" type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"width:150px !important;\\\" readonly=\\\"readonly\\\"/>\\r\\n                        </div>\\r\\n                    </div>\\r\\n    \\r\\n                    <div class=\\\"modal-line\\\">\\r\\n                        <div class=\\\"div-line1\\\">\\r\\n                            <label for=\\\"doc\\\">Documento</label>\\r\\n                            <input value=\\\"{{r.documento}}\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"doc\\\" style=\\\"width:150px !important;\\\" readonly=\\\"readonly\\\"/>\\r\\n                        </div>\\r\\n        \\r\\n                        <div class=\\\"div-line2\\\">\\r\\n                            <label for=\\\"cliente\\\">Cliente</label>\\r\\n                            <input id=\\\"cliente\\\" value=\\\"{{r.cliente}}\\\" type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"width:340px !important;\\\" readonly=\\\"readonly\\\"/>\\r\\n                        </div>\\r\\n    \\r\\n                        <div class=\\\"div-line2\\\">\\r\\n                            <label for=\\\"produto\\\">Produto</label>\\r\\n                            <input id=\\\"produto\\\" value=\\\"{{r.produto}}\\\" type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"width:150px !important;\\\" readonly=\\\"readonly\\\"/>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"modal-line\\\">\\r\\n                        <div class=\\\"div-line1\\\">\\r\\n                            <label for=\\\"priContato\\\">Primeiro contato</label>\\r\\n                            <input id=\\\"priContato\\\" value=\\\"{{r.dataContato}}\\\" type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"width:150px !important;\\\" readonly=\\\"readonly\\\"/>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"div-line2\\\">\\r\\n                            <label for=\\\"reContato\\\">Dentro do prazo 1º contato</label>                            \\r\\n                            <input id=\\\"reContato\\\" value=\\\"{{r.retornouPrazo}}\\\" type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"width:150px !important;\\\" readonly=\\\"readonly\\\"/>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"div-line2\\\" *ngIf=\\\"r.retornouPrazo == null || r.retornouPrazo == 'Sim'\\\">\\r\\n                            <label for=\\\"assisContato\\\">Assistente obteve contato</label>\\r\\n                            <input id=\\\"assisContato\\\" value=\\\"{{r.assisContato}}\\\" type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"width:150px !important;\\\" readonly=\\\"readonly\\\"/>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"div-line2\\\" *ngIf=\\\"r.retornouPrazo == 'Não'\\\">\\r\\n                            <label for=\\\"certi\\\">Certificação</label>\\r\\n                            <input id=\\\"certi\\\" value=\\\"{{r.requestCerti}}\\\" type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"width:150px !important;\\\" readonly=\\\"readonly\\\" *ngIf=\\\"r.requestCerti != null && r.requestCerti != ''\\\"/>\\r\\n                            <input id=\\\"certi\\\" value=\\\"Não encontrado\\\" type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"width:150px !important;\\\" readonly=\\\"readonly\\\" *ngIf=\\\"r.requestCerti == null || r.requestCerti == ''\\\"/>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"div-line2\\\">\\r\\n                            <label for=\\\"resp\\\">Responsável</label>\\r\\n                            <input id=\\\"resp\\\" value={{r.equipeResponsavel}} type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"width:150px !important;\\\" readonly=\\\"readonly\\\"/>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- SEMPRE VAI APARECER -->\\r\\n                    <div *ngIf=\\\"r.dataContato == null\\\">\\r\\n                        <div id=\\\"primeiroContato\\\" style=\\\"width:780px;\\\">\\r\\n                            <h3 style=\\\"padding-top: 30px;\\\">Primeiro Contato</h3>\\r\\n                                \\r\\n                            <label style=\\\"padding-right: 10px; padding-left: 10px; padding-top: 30px; vertical-align:text-bottom;\\\">\\r\\n                                Informe a data do primeiro contato\\r\\n                            </label>\\r\\n                            <my-date-picker id=\\\"my\\\" name=\\\"mydate\\\" (dateChanged)=\\\"onDateChanged($event)\\\" [options]=\\\"myDatePickerOptions\\\" [(ngModel)]=\\\"dateContato\\\" required></my-date-picker>\\r\\n                            \\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- CLIENTE RESPONDEU NO PRAZO == SIM -->\\r\\n                    <!-- SE CONSEGUIU CONTATO E OBTEVE RETORNO NO PRAZO -->\\r\\n                    <div *ngIf=\\\"r.dataContato != null && r.retornouPrazo == null\\\">\\r\\n                        <div id=\\\"primeiroContato\\\" style=\\\"width:780px;\\\">\\r\\n                            <h3 style=\\\"padding-top: 30px;\\\">Retorno Contato</h3>\\r\\n                            \\r\\n                            <label style=\\\"padding-right: 10px; padding-top: 30px;\\\">\\r\\n                                O retorno do primeiro contato aconteceu dentro do prazo?\\r\\n                            </label>\\r\\n    \\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"sla1ContSim()\\\" style=\\\"margin-right: 30px;\\\">Sim</button>\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"sla1ContNao()\\\">Não</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- SE CONSEGUIU CONTATO E OBTEVE RETORNO NO PRAZO E ENVIOU EMAIL -->\\r\\n                    <div *ngIf=\\\"r.dataContato != null && r.retornouPrazo == 'Sim' && r.contatoEmail == null\\\">\\r\\n                            <h3 style=\\\"padding-top: 30px;\\\">Enviar e-mail ao Responsável</h3>\\r\\n\\r\\n                            <label style=\\\"padding-right: 10px; padding-top: 30px; display:block;\\\">\\r\\n                                Escreva o e-mail de aviso para o(a) {{r.curranal}}\\r\\n                            </label>\\r\\n                            <textarea rows=\\\"4\\\" cols=\\\"100\\\" [(ngModel)]=\\\"r.mailConteudo\\\" style=\\\"display:block; margin-bottom:30px;\\\"></textarea>\\r\\n\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"sendMailResponsavel(1)\\\" style=\\\"margin-right: 30px;\\\">Enviar e-mail</button>\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"sendMailResponsavel(2)\\\">Pular</button>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"r.dataContato != null && r.retornouPrazo == 'Sim' && r.contatoEmail != null && r.assisContato == null\\\">\\r\\n                        <div id=\\\"assistenteContato\\\" style=\\\"width:780px;\\\">\\r\\n                            <h3 style=\\\"padding-top: 30px;\\\">Assitente obteve contato</h3>\\r\\n                                        \\r\\n                            <label style=\\\"padding-right: 10px; padding-top: 30px;\\\">\\r\\n                                O assistente conseguiu contato com o cliente?\\r\\n                            </label>\\r\\n        \\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"assistenteContSim()\\\" style=\\\"margin-right: 30px;\\\">Sim</button>\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"assistenteContNao()\\\">Não</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <!-- END CLIENTE RESPONDEU NO PRAZO == SIM -->\\r\\n                    <!-- CLIENTE RESPONDEU NO PRAZO == NAO -->\\r\\n                    <div *ngIf=\\\"r.dataContato != null && r.retornouPrazo == 'Não' && r.certificacao != null && r.contatoEmail == null\\\">\\r\\n                        <div id=\\\"solicitacao\\\" style=\\\"width:780px;\\\">\\r\\n                            <h3 style=\\\"padding-top: 30px;\\\">Enviar e-mail</h3>\\r\\n\\r\\n                            <label style=\\\"padding-right: 10px; padding-top: 30px; display:block;\\\">\\r\\n                                Escreva o e-mail de aviso para o(a) {{r.curranal}}\\r\\n                            </label>\\r\\n                            <textarea rows=\\\"4\\\" cols=\\\"100\\\" [(ngModel)]=\\\"r.mailConteudo\\\" style=\\\"display:block; margin-bottom:30px;\\\"></textarea>\\r\\n                            \\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"sendMailResponsavel(1)\\\" style=\\\"margin-right: 30px;\\\">Enviar e-mail</button>\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"sendMailResponsavel(2)\\\">Pular</button>\\r\\n                            \\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"r.dataContato != null && r.retornouPrazo == 'Não' && r.certificacao != null && r.contatoEmail != null\\\">\\r\\n                        <div id=\\\"certificacao\\\" style=\\\"width:780px;\\\">\\r\\n                            <h3 style=\\\"padding-top: 30px;\\\">Tratativa</h3>\\r\\n                                                \\r\\n                            <label style=\\\"padding-right: 10px; padding-top: 30px; display:block\\\">\\r\\n                                Coloque aqui as informações a serem enviadas para o responsável do chamado de Certificação!\\r\\n                            </label>\\r\\n\\r\\n                            <label style=\\\"padding-right: 10px; padding-top: 30px; display:block\\\">\\r\\n                                Direcionado o chamado para o assistente de certificação!\\r\\n                            </label>\\r\\n    \\r\\n                            <label style=\\\"padding-right: 10px; display:block\\\">\\r\\n                                {{r.certificacao}} - {{r.curranalCerti}}\\r\\n                            </label>\\r\\n                            \\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"r.dataContato != null && r.retornouPrazo == 'Não' && r.certificacao == null && r.processado == 0\\\">\\r\\n                        <div id=\\\"certificacao\\\" style=\\\"width:780px;\\\">\\r\\n                            <h3 style=\\\"padding-top: 30px;\\\">Tratativa</h3>\\r\\n                                                \\r\\n                            <label style=\\\"padding-right: 10px; padding-top: 30px; display:block\\\">\\r\\n                                Tratativa será realizada pelo responsável pelo WhatsApp!\\r\\n                            </label>\\r\\n\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"btnFinalizar()\\\" >Finalizar</button>\\r\\n                            \\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>                \\r\\n\\r\\n                <div class=\\\"modal-footer\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\">Sair</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { OnInit } from '@angular/core/src/metadata/lifecycle_hooks';\r\nimport { AppService } from 'src/service/app.service';\r\nimport { RequestVO } from 'src/vo/RequestVO';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { UsuarioRotVO } from 'src/vo/usuarioRotVO';\r\nimport { IMyDpOptions, IMyDateModel } from 'mydatepicker';\r\nimport { MailVO } from 'src/vo/mailVO';\r\n\r\n\r\n@Component({\r\n  selector: 'listReqWhats',\r\n  templateUrl: './list.component.html',\r\n})\r\n\r\nexport class ListComponent implements OnInit {\r\n  public actual = new Date();\r\n  //initializing p to one to list table\r\n  public p: number = 1;\r\n\r\n  public list: RequestVO[] = [];\r\n  public r = new RequestVO();\r\n\r\n  public actualDate: Date = new Date()\r\n  public dateContato: any;\r\n  public dateChanged: string = '';\r\n  public  usuario = new UsuarioRotVO();\r\n\r\n  constructor(private service: AppService) {\r\n    this.updTable()\r\n  }\r\n\r\n  //sorting to list table\r\n  key: string = 'name'; //set default\r\n  reverse: boolean = false;\r\n  sort(key) {\r\n    this.key = key;\r\n    this.reverse = !this.reverse;\r\n  }\r\n\r\n  //mydatepicker\r\n  public myDatePickerOptions: IMyDpOptions = {\r\n    editableDateField: false,\r\n    dateFormat: 'dd/mm/yyyy',\r\n    width: '150px'\r\n  };\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n  //------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n  detailsRequest(r: RequestVO) {\r\n    this.dateContato = null;\r\n    this.r = r;\r\n  }\r\n\r\n  sla1ContSim() {\r\n    this.r.retornouPrazo = \"Sim\";\r\n    this.updateReg();\r\n    //envia email para o responsavel automidia da CIP?\r\n    //chamar service para atualizar status automidia\r\n  }\r\n\r\n  sla1ContNao() {\r\n    this.r.retornouPrazo      = \"Não\";\r\n\r\n    this.service.getCertificacaoByRequest(this.r.request).subscribe(\r\n      data => {\r\n        this.r.requestCerti   = data\r\n\r\n        if(this.r.requestCerti != '' && this.r.requestCerti != null){\r\n          this.r.curranalCerti  = this.getCurranadlByRequest(this.r.requestCerti)\r\n        }\r\n      }\r\n    )\r\n    //this.r.contatoEmail = \"E-mail não enviado\"\r\n    //chamar service para atualizar status automidia\r\n  }\r\n\r\n  btnFinalizar(){\r\n    this.r.processado = 1\r\n    this.updateReg()\r\n  }\r\n\r\n  private getCurranadlByRequest(request : string) : string{\r\n    let curranal : string = ''\r\n    this.service.getCurranalByRequest(request).subscribe( data => curranal = data)\r\n    return curranal\r\n  }\r\n\r\n  assistenteContSim() {\r\n    this.r.assisContato = \"Sim\";\r\n    this.r.processado   = 1;\r\n    this.updateReg();\r\n  }\r\n\r\n  assistenteContNao() {\r\n    this.r.assisContato = \"Não\";\r\n    this.updateReg();\r\n  }\r\n\r\n  sendMailResponsavel(opcao) {    \r\n    if (opcao == 1) {\r\n      this.r.contatoEmail = \"E-mail enviado\"\r\n      this.service.getUserAutomidiaByCurranal(this.r.curranal).subscribe(\r\n        data => {\r\n                  this.usuario = data\r\n                  let mail = new MailVO('[NOTIFICAÇÃO WHATSAPP]','Alerta do chamado: '+this.r.request +'<br/> <br/>'+this.r.mailConteudo ,'no-reply@telefonica.com',['dione.sanga@telefonica.com'])\r\n                  let objJson : string  = JSON.stringify(mail)\r\n                  this.service.sendMail(objJson).subscribe( )           \r\n                }\r\n      )\r\n    } else {\r\n      this.r.contatoEmail = \"E-mail não enviado\"\r\n    }\r\n    this.r.equipeResponsavel = \"Assistente\"\r\n    this.updateReg();\r\n  }\r\n\r\n  updateReg(){\r\n    let objJson : string  = JSON.stringify(this.r)\r\n    this.service.updateRegistro(objJson).subscribe(\r\n      data => {\r\n        this.updTable()\r\n      }\r\n    )\r\n  }\r\n\r\n  private updTable(){\r\n    this.service.getListWhatsCip().subscribe(list => { this.list = list })\r\n  }\r\n\r\n  public onDateChanged(event: IMyDateModel) {\r\n    if (event.jsdate) {\r\n      let d: Date = new Date(event.jsdate.getTime());\r\n      this.r.dataContato = d.toLocaleDateString(\"pt-br\");\r\n      this.updateReg();\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && save()\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"firstName\\\">First Name</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"model.firstName\\\" #firstName=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && firstName.invalid }\\\"\\r\\n            required style=\\\"width:120px; float: left;\\\"/>\\r\\n        <div *ngIf=\\\"f.submitted && firstName.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n            <div *ngIf=\\\"firstName.errors.required\\\">First Name is required</div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n    <button class=\\\"btn btn-primary\\\">Register</button>\\r\\n</form>\"","import { Component } from '@angular/core';\r\nimport { OnInit } from '@angular/core/src/metadata/lifecycle_hooks';\r\n\r\n@Component({\r\n    templateUrl: './teste.component.html',\r\n  })\r\n  export class TesteComponent implements OnInit {  \r\n    model: any = {};\r\n    \r\n    save(){\r\n        alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.model))\r\n    }\r\n\r\n    ngOnInit() {\r\n        \r\n    \r\n    \r\n      }\r\n  }","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","import { Component, OnInit } from '@angular/core';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { RequestVO } from 'src/vo/RequestVO';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Headers } from '@angular/http';\r\nimport { RequestOptions } from '@angular/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { UsuarioRotVO } from 'src/vo/usuarioRotVO';\r\nimport { MailVO } from 'src/vo/mailVO';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    getListWhatsCip(): Observable<RequestVO[]> {\r\n        return this.http.get<RequestVO[]>('http://localhost:7001/docs/services/listWhatsCip')\r\n            .pipe(catchError(this.handleError('getListWhats', []))\r\n            );\r\n    }\r\n\r\n    updateRegistro(r: string): Observable<boolean> {\r\n        return this.http.post<boolean>('http://localhost:7001/docs/services/updateRegWhats', r)\r\n    }\r\n\r\n    getCipRequest(r: string): Observable<RequestVO> {\r\n        let data = { request: r };\r\n        return this.http.get<RequestVO>('http://localhost:7001/docs/services/cipRequest', { params: data })\r\n    }\r\n\r\n    getUserAutomidiaByCurranal(curranal : string): Observable<UsuarioRotVO>{\r\n        let data = { curranal: curranal };\r\n        return this.http.get<UsuarioRotVO>('http://localhost:7001/docs/services/userAutomidiaByCurranal',{params: data})\r\n    }\r\n\r\n    getCurranalByRequest(request : string): Observable<string>{\r\n        let data = { curranal: request };\r\n        return this.http.get<string>('http://localhost:7001/docs/services/getCurranalByRequest',{params: data})\r\n    }\r\n\r\n    existsReg(r: string): Observable<boolean> {\r\n        let data = { request: r };\r\n        return this.http.get<boolean>('http://localhost:7001/docs/services/existCipWhats', { params: data })\r\n    }\r\n\r\n    isCip(r: string): Observable<boolean> {\r\n        let data = { request: r };\r\n        return this.http.get<boolean>('http://localhost:7001/docs/services/isCip', { params: data })\r\n    }\r\n\r\n    saveReg(r: string): Observable<RequestVO> {\r\n        return this.http.post<RequestVO>('http://localhost:7001/docs/services/insertODCWhats', r)\r\n    }\r\n\r\n    sendMail(mail : string): Observable<boolean>{\r\n        return this.http.post<boolean>('http://sv2kprel3:7001/docs/services/sendMail', mail)\r\n    }\r\n\r\n    getCertificacaoByRequest(request: string): Observable<string>{\r\n        let data = { curranal: request };\r\n        return this.http.get<string>('http://localhost:7001/docs/services/getCertificacaoByCIPRequest', {params : data})\r\n    }\r\n    //-------------------------------------------------------------------------------------------------------\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n\r\n            // TODO: send the error to remote logging infrastructure\r\n            console.error(error); // log to console instead\r\n\r\n            // TODO: better job of transforming error for user consumption\r\n            this.log(`${operation} failed: ${error.message}`);\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n\r\n    private log(message: string) {\r\n        console.log('HeroService: ' + message);\r\n    }\r\n\r\n}","\r\nexport class RequestVO{\r\n    request         : string\r\n    curranal        : string\r\n    requestCerti    : string\r\n    curranalCerti   : string\r\n    category        : string\r\n    product         : string\r\n    process         : string\r\n    problem         : string        \r\n    rstatus         : string\r\n    opendate        : string\r\n    resltime        : string\r\n    closedate       : string\r\n    closed          : number\r\n    canal           : string\r\n    descript        : string\r\n    fa              : string\r\n    produto         : string\r\n    documento       : string\r\n    cliente         : string\r\n    procon          : string    \r\n    dataContato     : string\r\n    contatoEmail    : string\r\n    mailConteudo    : string\r\n    retornouPrazo   : string\r\n    dateRetorPrazo  : Date\r\n    assisContato    : string\r\n    equipeResponsavel : string\r\n\r\n    processado      : number\r\n\r\n}","\r\nexport class MailVO{\r\n    title           : string\r\n    msg             : string\r\n    from            : string\r\n    to              : string[]\r\n\r\n    constructor (title: string, msg : string, from : string, to : string[]){\r\n        this.title  = title\r\n        this.msg    = msg\r\n        this.from   = from\r\n        this.to     = to\r\n    }\r\n}\r\n\r\n","export class UsuarioRotVO{\r\n\r\n    matricula       : string\r\n    loginAutomidia  : string\r\n    quantidade      : number\r\n    email           : string\r\n}"],"sourceRoot":""}